# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `memery` gem.
# Please instead update this file by running `bin/tapioca gem memery`.


# source://memery//lib/memery/version.rb#3
module Memery
  extend ::Memery::ModuleMethods
  include ::Memery::InstanceMethods

  mixes_in_class_methods ::Memery::ClassMethods

  class << self
    # source://memery//lib/memery.rb#7
    def monotonic_clock; end
  end
end

# source://memery//lib/memery.rb#35
module Memery::ClassMethods
  # source://memery//lib/memery.rb#36
  def memoize(*method_names, condition: T.unsafe(nil), ttl: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://memery//lib/memery.rb#44
  def memoized?(method_name); end

  private

  # source://memery//lib/memery.rb#59
  def define_memoized_method!(method_name, **options); end

  # source://memery//lib/memery.rb#53
  def prepend_memery_module!; end
end

# source://memery//lib/memery.rb#63
module Memery::ClassMethods::MemoizationModule
  # source://memery//lib/memery.rb#71
  def define_memoized_method!(klass, method_name, condition: T.unsafe(nil), ttl: T.unsafe(nil)); end

  private

  # source://memery//lib/memery.rb#101
  def method_visibility(klass, method_name); end
end

# source://memery//lib/memery.rb#64
class Memery::ClassMethods::MemoizationModule::Cache < ::Struct
  # @return [Boolean]
  #
  # source://memery//lib/memery.rb#65
  def fresh?(ttl); end

  # Returns the value of attribute result
  #
  # @return [Object] the current value of result
  def result; end

  # Sets the attribute result
  #
  # @param value [Object] the value to set the attribute result to.
  # @return [Object] the newly set value
  def result=(_); end

  # Returns the value of attribute time
  #
  # @return [Object] the current value of time
  def time; end

  # Sets the attribute time
  #
  # @param value [Object] the value to set the attribute time to.
  # @return [Object] the newly set value
  def time=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://memery//lib/memery.rb#117
module Memery::InstanceMethods
  # source://memery//lib/memery.rb#118
  def clear_memery_cache!; end
end

# source://memery//lib/memery.rb#20
module Memery::ModuleMethods
  # source://memery//lib/memery.rb#21
  def included(base = T.unsafe(nil), &block); end
end

# source://memery//lib/memery.rb#12
Memery::OUR_BLOCK = T.let(T.unsafe(nil), Proc)

# source://memery//lib/memery/version.rb#4
Memery::VERSION = T.let(T.unsafe(nil), String)
