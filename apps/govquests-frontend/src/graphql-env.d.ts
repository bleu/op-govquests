/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Action': { kind: 'OBJECT'; name: 'Action'; fields: { 'actionData': { name: 'actionData'; type: { kind: 'INTERFACE'; name: 'ActionDataInterface'; ofType: null; } }; 'actionExecutions': { name: 'actionExecutions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActionExecution'; ofType: null; }; }; } }; 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActionDisplayData'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'ActionDataInterface': { kind: 'INTERFACE'; name: 'ActionDataInterface'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'EmptyActionData' | 'ReadDocumentActionData'; };
    'ActionDisplayData': { kind: 'OBJECT'; name: 'ActionDisplayData'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ActionExecution': { kind: 'OBJECT'; name: 'ActionExecution'; fields: { 'actionData': { name: 'actionData'; type: { kind: 'INTERFACE'; name: 'ActionDataInterface'; ofType: null; } }; 'actionId': { name: 'actionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'completionData': { name: 'completionData'; type: { kind: 'INTERFACE'; name: 'CompletionDataInterface'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startData': { name: 'startData'; type: { kind: 'INTERFACE'; name: 'StartDataInterface'; ofType: null; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'BackgroundGradient': { kind: 'OBJECT'; name: 'BackgroundGradient'; fields: { 'fromColor': { name: 'fromColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'toColor': { name: 'toColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Badge': { kind: 'OBJECT'; name: 'Badge'; fields: { 'badgeable': { name: 'badgeable'; type: { kind: 'UNION'; name: 'BadgeableUnion'; ofType: null; } }; 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BadgeDisplayData'; ofType: null; }; } }; 'earnedByCurrentUser': { name: 'earnedByCurrentUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'userBadges': { name: 'userBadges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserBadge'; ofType: null; }; }; }; } }; }; };
    'BadgeDisplayData': { kind: 'OBJECT'; name: 'BadgeDisplayData'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sequenceNumber': { name: 'sequenceNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'BadgeUnion': { kind: 'UNION'; name: 'BadgeUnion'; fields: {}; possibleTypes: 'Badge' | 'SpecialBadge'; };
    'BadgeableUnion': { kind: 'UNION'; name: 'BadgeableUnion'; fields: {}; possibleTypes: 'Quest' | 'Track'; };
    'Boolean': unknown;
    'CollectBadgeInput': { kind: 'INPUT_OBJECT'; name: 'CollectBadgeInput'; isOneOf: false; inputFields: [{ name: 'badgeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'badgeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CollectBadgePayload': { kind: 'OBJECT'; name: 'CollectBadgePayload'; fields: { 'badgeEarned': { name: 'badgeEarned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CompleteActionExecutionInput': { kind: 'INPUT_OBJECT'; name: 'CompleteActionExecutionInput'; isOneOf: false; inputFields: [{ name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'discourseVerificationCompletionData'; type: { kind: 'INPUT_OBJECT'; name: 'DiscourseVerificationCompletionDataInput'; ofType: null; }; defaultValue: null }, { name: 'executionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'gitcoinScoreCompletionData'; type: { kind: 'INPUT_OBJECT'; name: 'GitcoinScoreCompletionDataInput'; ofType: null; }; defaultValue: null }, { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CompleteActionExecutionPayload': { kind: 'OBJECT'; name: 'CompleteActionExecutionPayload'; fields: { 'actionExecution': { name: 'actionExecution'; type: { kind: 'OBJECT'; name: 'ActionExecution'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CompletionDataInterface': { kind: 'INTERFACE'; name: 'CompletionDataInterface'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'DiscourseVerificationCompletionData' | 'EmptyActionCompletionData' | 'GitcoinScoreCompletionData'; };
    'DiscourseVerificationCompletionData': { kind: 'OBJECT'; name: 'DiscourseVerificationCompletionData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discourseUsername': { name: 'discourseUsername'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DiscourseVerificationCompletionDataInput': { kind: 'INPUT_OBJECT'; name: 'DiscourseVerificationCompletionDataInput'; isOneOf: false; inputFields: [{ name: 'encryptedKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DiscourseVerificationStartData': { kind: 'OBJECT'; name: 'DiscourseVerificationStartData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'verificationUrl': { name: 'verificationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DisplayData': { kind: 'OBJECT'; name: 'DisplayData'; fields: { 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'intro': { name: 'intro'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requirements': { name: 'requirements'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EmptyActionCompletionData': { kind: 'OBJECT'; name: 'EmptyActionCompletionData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EmptyActionData': { kind: 'OBJECT'; name: 'EmptyActionData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EmptyActionStartData': { kind: 'OBJECT'; name: 'EmptyActionStartData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EnsDomain': { kind: 'OBJECT'; name: 'EnsDomain'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'resolvedAddress': { name: 'resolvedAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'wrappedOwner': { name: 'wrappedOwner'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EnsStartData': { kind: 'OBJECT'; name: 'EnsStartData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'domains': { name: 'domains'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EnsDomain'; ofType: null; }; }; }; } }; }; };
    'Float': unknown;
    'GameProfile': { kind: 'OBJECT'; name: 'GameProfile'; fields: { 'profileId': { name: 'profileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rank': { name: 'rank'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'score': { name: 'score'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'tier': { name: 'tier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tier'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'votingPower': { name: 'votingPower'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VotingPower'; ofType: null; }; } }; }; };
    'GenerateSiweMessageInput': { kind: 'INPUT_OBJECT'; name: 'GenerateSiweMessageInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GenerateSiweMessagePayload': { kind: 'OBJECT'; name: 'GenerateSiweMessagePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GitcoinScoreCompletionData': { kind: 'OBJECT'; name: 'GitcoinScoreCompletionData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'minimumPassingScore': { name: 'minimumPassingScore'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'score': { name: 'score'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'GitcoinScoreCompletionDataInput': { kind: 'INPUT_OBJECT'; name: 'GitcoinScoreCompletionDataInput'; isOneOf: false; inputFields: [{ name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GitcoinScoreStartData': { kind: 'OBJECT'; name: 'GitcoinScoreStartData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ID': unknown;
    'ISO8601DateTime': unknown;
    'Int': unknown;
    'JSON': unknown;
    'Leaderboard': { kind: 'OBJECT'; name: 'Leaderboard'; fields: { 'gameProfiles': { name: 'gameProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GameProfile'; ofType: null; }; }; }; } }; 'leaderboardId': { name: 'leaderboardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tier': { name: 'tier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tier'; ofType: null; }; } }; }; };
    'MarkAllNotificationsAsReadInput': { kind: 'INPUT_OBJECT'; name: 'MarkAllNotificationsAsReadInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'deliveryMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"in_app\"" }]; };
    'MarkAllNotificationsAsReadPayload': { kind: 'OBJECT'; name: 'MarkAllNotificationsAsReadPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'success': { name: 'success'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MarkNotificationAsReadInput': { kind: 'INPUT_OBJECT'; name: 'MarkNotificationAsReadInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'deliveryMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"in_app\"" }, { name: 'notificationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'MarkNotificationAsReadPayload': { kind: 'OBJECT'; name: 'MarkNotificationAsReadPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'notificationDelivery': { name: 'notificationDelivery'; type: { kind: 'OBJECT'; name: 'NotificationDelivery'; ofType: null; } }; }; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'collectBadge': { name: 'collectBadge'; type: { kind: 'OBJECT'; name: 'CollectBadgePayload'; ofType: null; } }; 'completeActionExecution': { name: 'completeActionExecution'; type: { kind: 'OBJECT'; name: 'CompleteActionExecutionPayload'; ofType: null; } }; 'generateSiweMessage': { name: 'generateSiweMessage'; type: { kind: 'OBJECT'; name: 'GenerateSiweMessagePayload'; ofType: null; } }; 'markAllNotificationsAsRead': { name: 'markAllNotificationsAsRead'; type: { kind: 'OBJECT'; name: 'MarkAllNotificationsAsReadPayload'; ofType: null; } }; 'markNotificationAsRead': { name: 'markNotificationAsRead'; type: { kind: 'OBJECT'; name: 'MarkNotificationAsReadPayload'; ofType: null; } }; 'refreshVotingPower': { name: 'refreshVotingPower'; type: { kind: 'OBJECT'; name: 'RefreshVotingPowerPayload'; ofType: null; } }; 'signInWithEthereum': { name: 'signInWithEthereum'; type: { kind: 'OBJECT'; name: 'SignInWithEthereumPayload'; ofType: null; } }; 'signOut': { name: 'signOut'; type: { kind: 'OBJECT'; name: 'SignOutPayload'; ofType: null; } }; 'startActionExecution': { name: 'startActionExecution'; type: { kind: 'OBJECT'; name: 'StartActionExecutionPayload'; ofType: null; } }; }; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'Notification' | 'NotificationDelivery'; };
    'Notification': { kind: 'OBJECT'; name: 'Notification'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'deliveries': { name: 'deliveries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NotificationDeliveryConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'notificationType': { name: 'notificationType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NotificationConnection': { kind: 'OBJECT'; name: 'NotificationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NotificationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Notification'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NotificationDelivery': { kind: 'OBJECT'; name: 'NotificationDelivery'; fields: { 'deliveredAt': { name: 'deliveredAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'readAt': { name: 'readAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NotificationDeliveryConnection': { kind: 'OBJECT'; name: 'NotificationDeliveryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NotificationDeliveryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NotificationDelivery'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NotificationDeliveryEdge': { kind: 'OBJECT'; name: 'NotificationDeliveryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'NotificationDelivery'; ofType: null; } }; }; };
    'NotificationEdge': { kind: 'OBJECT'; name: 'NotificationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Notification'; ofType: null; } }; }; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'badge': { name: 'badge'; type: { kind: 'OBJECT'; name: 'Badge'; ofType: null; } }; 'badges': { name: 'badges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Badge'; ofType: null; }; }; } }; 'currentUser': { name: 'currentUser'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'notifications': { name: 'notifications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NotificationConnection'; ofType: null; }; } }; 'quest': { name: 'quest'; type: { kind: 'OBJECT'; name: 'Quest'; ofType: null; } }; 'quests': { name: 'quests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Quest'; ofType: null; }; }; }; } }; 'specialBadge': { name: 'specialBadge'; type: { kind: 'OBJECT'; name: 'SpecialBadge'; ofType: null; } }; 'specialBadges': { name: 'specialBadges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SpecialBadge'; ofType: null; }; }; } }; 'tier': { name: 'tier'; type: { kind: 'OBJECT'; name: 'Tier'; ofType: null; } }; 'tiers': { name: 'tiers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Tier'; ofType: null; }; }; }; } }; 'track': { name: 'track'; type: { kind: 'OBJECT'; name: 'Track'; ofType: null; } }; 'tracks': { name: 'tracks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Track'; ofType: null; }; }; } }; 'unreadNotificationsCount': { name: 'unreadNotificationsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'Quest': { kind: 'OBJECT'; name: 'Quest'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Action'; ofType: null; }; }; }; } }; 'audience': { name: 'audience'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'badge': { name: 'badge'; type: { kind: 'OBJECT'; name: 'Badge'; ofType: null; } }; 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DisplayData'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'rewardPools': { name: 'rewardPools'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RewardPool'; ofType: null; }; }; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userQuests': { name: 'userQuests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserQuest'; ofType: null; }; }; }; } }; }; };
    'ReadDocumentActionData': { kind: 'OBJECT'; name: 'ReadDocumentActionData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'documentUrl': { name: 'documentUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RefreshVotingPowerInput': { kind: 'INPUT_OBJECT'; name: 'RefreshVotingPowerInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'RefreshVotingPowerPayload': { kind: 'OBJECT'; name: 'RefreshVotingPowerPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'votingPower': { name: 'votingPower'; type: { kind: 'OBJECT'; name: 'VotingPower'; ofType: null; } }; }; };
    'RewardDefinition': { kind: 'OBJECT'; name: 'RewardDefinition'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RewardPool': { kind: 'OBJECT'; name: 'RewardPool'; fields: { 'remainingInventory': { name: 'remainingInventory'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rewardDefinition': { name: 'rewardDefinition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RewardDefinition'; ofType: null; }; } }; }; };
    'SendEmailStartData': { kind: 'OBJECT'; name: 'SendEmailStartData'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SendEmailVerificationInput': { kind: 'INPUT_OBJECT'; name: 'SendEmailVerificationInput'; isOneOf: false; inputFields: [{ name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SignInWithEthereumInput': { kind: 'INPUT_OBJECT'; name: 'SignInWithEthereumInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'SignInWithEthereumPayload': { kind: 'OBJECT'; name: 'SignInWithEthereumPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'SignOutInput': { kind: 'INPUT_OBJECT'; name: 'SignOutInput'; isOneOf: false; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SignOutPayload': { kind: 'OBJECT'; name: 'SignOutPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SpecialBadge': { kind: 'OBJECT'; name: 'SpecialBadge'; fields: { 'badgeType': { name: 'badgeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BadgeDisplayData'; ofType: null; }; } }; 'earnedByCurrentUser': { name: 'earnedByCurrentUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'rewardPools': { name: 'rewardPools'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RewardPool'; ofType: null; }; }; }; } }; 'userBadges': { name: 'userBadges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserBadge'; ofType: null; }; }; }; } }; }; };
    'StartActionExecutionInput': { kind: 'INPUT_OBJECT'; name: 'StartActionExecutionInput'; isOneOf: false; inputFields: [{ name: 'actionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'questId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sendEmailVerificationInput'; type: { kind: 'INPUT_OBJECT'; name: 'SendEmailVerificationInput'; ofType: null; }; defaultValue: null }]; };
    'StartActionExecutionPayload': { kind: 'OBJECT'; name: 'StartActionExecutionPayload'; fields: { 'actionExecution': { name: 'actionExecution'; type: { kind: 'OBJECT'; name: 'ActionExecution'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'StartDataInterface': { kind: 'INTERFACE'; name: 'StartDataInterface'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'DiscourseVerificationStartData' | 'EmptyActionStartData' | 'EnsStartData' | 'GitcoinScoreStartData' | 'SendEmailStartData'; };
    'String': unknown;
    'Tier': { kind: 'OBJECT'; name: 'Tier'; fields: { 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TierDisplayData'; ofType: null; }; } }; 'gameProfiles': { name: 'gameProfiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GameProfile'; ofType: null; }; }; }; } }; 'imageUrl': { name: 'imageUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'leaderboard': { name: 'leaderboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Leaderboard'; ofType: null; }; } }; 'maxDelegation': { name: 'maxDelegation'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minDelegation': { name: 'minDelegation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'multiplier': { name: 'multiplier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'tierId': { name: 'tierId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TierDisplayData': { kind: 'OBJECT'; name: 'TierDisplayData'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Track': { kind: 'OBJECT'; name: 'Track'; fields: { 'badge': { name: 'badge'; type: { kind: 'OBJECT'; name: 'Badge'; ofType: null; } }; 'displayData': { name: 'displayData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TrackDisplayData'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isCompleted': { name: 'isCompleted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'points': { name: 'points'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quests': { name: 'quests'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Quest'; ofType: null; }; }; }; } }; }; };
    'TrackDisplayData': { kind: 'OBJECT'; name: 'TrackDisplayData'; fields: { 'backgroundGradient': { name: 'backgroundGradient'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BackgroundGradient'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gameProfile': { name: 'gameProfile'; type: { kind: 'OBJECT'; name: 'GameProfile'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'userBadges': { name: 'userBadges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserBadge'; ofType: null; }; }; } }; 'userQuests': { name: 'userQuests'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserQuest'; ofType: null; }; }; } }; 'userTrack': { name: 'userTrack'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserTrack'; ofType: null; }; }; } }; 'userType': { name: 'userType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UserBadge': { kind: 'OBJECT'; name: 'UserBadge'; fields: { 'badge': { name: 'badge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'BadgeUnion'; ofType: null; }; } }; 'earnedAt': { name: 'earnedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; }; } }; 'userId': { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'UserQuest': { kind: 'OBJECT'; name: 'UserQuest'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'UserTrack': { kind: 'OBJECT'; name: 'UserTrack'; fields: { 'completedAt': { name: 'completedAt'; type: { kind: 'SCALAR'; name: 'ISO8601DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VotingPower': { kind: 'OBJECT'; name: 'VotingPower'; fields: { 'totalVotingPower': { name: 'totalVotingPower'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'votingPowerRelativeToVotableSupply': { name: 'votingPowerRelativeToVotableSupply'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: 'Mutation';
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}